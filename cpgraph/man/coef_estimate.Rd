% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coef_estimate.R
\name{coef_estimate}
\alias{coef_estimate}
\title{Coefficient estimation}
\usage{
coef_estimate(
  x,
  lambda_vec = NULL,
  cv = 5,
  NumCores = 4,
  par = F,
  length_lam = 50,
  lam_sep = 1.75,
  l_end = 2
)
}
\arguments{
\item{x}{an n by p matrix of observations.}

\item{lambda_vec}{a grid of values of the regularization parameter to be used
for cross-validation.}

\item{cv}{number of cross-validation folds.}

\item{NumCores}{number of processor cores to be used}

\item{par}{If TRUE parallelization of the lasso estimation is performed.}

\item{length_lam}{length of grid.}

\item{lam_sep}{numeric value. Used in the regularizer grid if not provided by
the user.}

\item{l_end}{end value of the lambda sequence}
}
\value{
\item{coef_mat}{Matrix of coefficients arranged columnwise}
\item{la_min_vec}{Vector of selected lambda values for each sub-problem.}
}
\description{
Estimates elements of the inverse covariance matrix column-wise
by solving a sequence of lasso sub-problems for detection of \code{type="graph"}
. Each subproblem is solved using the library \code{glmnet}
\insertCite{friedman2010regularization}{cpgraph} in which the regularization
path is computed over a given range of values of the regularization parameter.
This function implements the 'fit' part of the split, fit and minimize procedure.
}
\details{
The parameters are obtained using the \code{glmnet} regularization
path with parameters specified in \code{lambda_vec}. If \code{lambda_vec} is
omitted the path is set to
\deqn{seq(lam.sep*(sqrt(log(max(p,n))/n),l.end,length.out=length.lam)}
If \code{par=TRUE} the coefficient estimation is done in parallel using the
library \code{parallel} with the number of CPU cores set to \code{NumCores}.
}
\examples{
n = 300; p = 50
sigma = t(toeplitz(1:p)) \%*\% toeplitz(1:p)
x = mvrnorm(n, rep(0, p), sigma)
mod = coef_estimate(x)
mod$la_min_vec
mod$coef_mat[ , 1]
}
\references{
\insertAllCited
}
\author{
Konstantinos Tsampourakis <kostas.tsampourakis@gmail.com>
}
